{
  "createdAt": "2025-04-18T20:03:03.830Z",
  "updatedAt": "2025-06-23T22:55:17.000Z",
  "id": "GmeUFdXNPBAPvpmO",
  "name": "RAG Ingest and Process File",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "ah-media",
          "mode": "list",
          "cachedResultName": "ah-media"
        },
        "options": {
          "pineconeNamespace": "={{ $json.namespace }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        -1164,
        -400
      ],
      "id": "1469e45b-bdac-42d9-811e-5f255bf04301",
      "name": "Pinecone Vector Store",
      "alwaysOutputData": true,
      "notesInFlow": false,
      "credentials": {
        "pineconeApi": {
          "id": "x0bN3Ljld6zAEruh",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -1180,
        -180
      ],
      "id": "ebe7b232-0d4e-4f96-a26d-59e8458d997b",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "b1Nz8WxwYDKRmecP",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {
          "splitPages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -1060,
        -177.5
      ],
      "id": "6a64dc07-9255-42dd-a61e-db0bfa32f430",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "separator": "=\\n",
        "chunkSize": 800,
        "chunkOverlap": 100
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -972,
        20
      ],
      "id": "898f2b2a-f7ad-4d96-b3c8-63d1cb80a8d0",
      "name": "Character Text Splitter"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "fded596d-4a61-4fd2-90a4-006df43136bf",
        "responseMode": "responseNode",
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2720,
        -300
      ],
      "id": "7bd02bd1-311e-4913-b35f-a1a2d6d6609a",
      "name": "Webhook",
      "webhookId": "fded596d-4a61-4fd2-90a4-006df43136bf"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"namespace\": \"{{ $('Inject Namespace').item.json.namespace }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -244,
        -400
      ],
      "id": "d5b825fc-4238-45ad-81d2-d5db89402ca1",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "jsCode": "  const adjectives = [\n    \"quick\", \"bright\", \"silent\", \"brave\", \"calm\", \"lucky\", \"sunny\", \"clever\", \"happy\", \"shiny\"\n  ];\n  const nouns = [\n    \"tiger\", \"hill\", \"cloud\", \"river\", \"falcon\", \"stone\", \"tree\", \"flame\", \"wave\", \"trail\"\n  ];\n\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  const number = Math.floor(Math.random() * 10000); // 0 to 9999\n\n  return { namespace: `${adjective}-${noun}-${number}` };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1840,
        -220
      ],
      "id": "458e2f0e-2033-4120-bfbf-c5cec482a2fc",
      "name": "Generate Namespace"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -684,
        -400
      ],
      "id": "d4768517-9f2d-48cf-b5e1-48218203001b",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Get File Info').first().json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1400,
        -400
      ],
      "id": "10aee22b-dfa0-4506-842e-ac82cd523cef",
      "name": "Download File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "fA1w6gMdQ2aJNFpG",
          "name": "adam@adamhaley.com Google Drive"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "84d62751-53eb-4145-9e72-fcd968d12b95",
              "name": "namespace",
              "value": "={{ $('Webhook').item.json.body.namespace || $('Generate Namespace').item.json.namespace }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1620,
        -400
      ],
      "id": "24965868-cdf5-4252-95cb-225f7d4e88e9",
      "name": "Inject Namespace"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3cb86ff3-683e-4013-94d0-bba50bcc4c0a",
              "leftValue": "={{ $('Webhook').item.json.body.namespace }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2060,
        -300
      ],
      "id": "496e814b-5bc5-4434-afd6-cd1e253bedc1",
      "name": "If Namespace with Request"
    },
    {
      "parameters": {
        "inputDataFieldName": "data0",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1zaQwxyD3xd090fwyWq8lSxWVcb1Dmf1Y",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2500,
        -300
      ],
      "id": "0e628de4-969e-4246-ae7e-de5790cd2ec9",
      "name": "Upload to Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "fA1w6gMdQ2aJNFpG",
          "name": "adam@adamhaley.com Google Drive"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $json.id }}?fields=*",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2280,
        -300
      ],
      "id": "c4b1a714-7235-46e6-9a7f-84c04384c4ae",
      "name": "Get File Info",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "fA1w6gMdQ2aJNFpG",
          "name": "adam@adamhaley.com Google Drive"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2dedd910-8caf-421a-8160-de47286ecfbb",
              "name": "namespace",
              "value": "={{ $('Inject Namespace').item.json.namespace }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -464,
        -400
      ],
      "id": "7c24f0ad-e1c1-4d32-8175-d32a762d3789",
      "name": "Extract Namespace"
    },
    {
      "parameters": {
        "content": "## Ingest File\n",
        "height": 700,
        "width": 660
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2800,
        -540
      ],
      "id": "5b16aa16-ec7f-4959-8820-c9fb4cc1e312",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Manage Namespace for Multi-tenancy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf a namespace came in with the webhook call, use that namespace. Otherwise we need to generate a namespace (see code node).\nNamespace is generated with a random adjective, noun, and number. This balance the best-of-both worlds of having a human-readable name, and also low likelihood of collisions.\n ",
        "height": 700,
        "width": 660,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2120,
        -540
      ],
      "id": "54a514b3-7823-4f9a-a113-0a703907f2eb",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Document Loading and Vector Embedding\n",
        "height": 700,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1440,
        -540
      ],
      "id": "e5c085b4-c9cf-4247-b68b-1e6e2dfa703c",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Return Data\n",
        "height": 700,
        "width": 660,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -720,
        -540
      ],
      "id": "ac06c135-20b7-4e73-9496-97f389c73405",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## RAG Injest and Process File (multi-tenant)",
        "height": 120,
        "width": 640,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2800,
        -900
      ],
      "id": "9a1980b3-309a-4dc7-9b2f-1bb575bc316e",
      "name": "Sticky Note4"
    }
  ],
  "connections": {
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Upload to Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Namespace": {
      "main": [
        [
          {
            "node": "Inject Namespace",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Extract Namespace",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inject Namespace": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Namespace with Request": {
      "main": [
        [
          {
            "node": "Inject Namespace",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate Namespace",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Google Drive": {
      "main": [
        [
          {
            "node": "Get File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File Info": {
      "main": [
        [
          {
            "node": "If Namespace with Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Namespace": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Google Drive Trigger": {
      "lastTimeChecked": "2025-05-15T00:59:26Z"
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "dd4fd000-92fc-4c15-8a41-e11dbb4df864",
  "triggerCount": 1,
  "tags": []
}